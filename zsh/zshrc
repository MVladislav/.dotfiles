# ~/.zshrc

# ---------------------------------------------------------------------------
# Path configuration
# ---------------------------------------------------------------------------
# Ensure ~/.local/bin is in PATH (used by tmux and locally installed tools)
# if [ -d "$HOME/.local/bin" ]; then
#   if [[ ":$PATH:" != *":$HOME/.local/bin:"* ]]; then
#     export PATH="$HOME/.local/bin:$PATH"
#   fi
# fi

# ---------------------------------------------------------------------------
# History settings
# ---------------------------------------------------------------------------
HISTFILE="$HOME/.zsh_history"     # Path where shell history is stored
HISTSIZE=1000000                  # Number of lines to keep in memory
SAVEHIST=1000000                  # Number of lines to save to $HISTFILE

# History behavior tuning
setopt EXTENDED_HISTORY           # Include timestamp and duration in history
setopt INC_APPEND_HISTORY         # Append commands immediately
setopt SHARE_HISTORY              # Share command history across terminals
setopt HIST_EXPIRE_DUPS_FIRST     # Drop duplicates first when trimming
setopt HIST_IGNORE_ALL_DUPS       # Remove previous duplicates when adding new
setopt HIST_FIND_NO_DUPS          # Skip duplicates when searching history
setopt HIST_IGNORE_SPACE          # Skip commands starting with a space
setopt HIST_SAVE_NO_DUPS          # Prevent duplicate entries from being written
setopt HIST_REDUCE_BLANKS         # Strip superfluous whitespace

# ---------------------------------------------------------------------------
# Directory navigation
# ---------------------------------------------------------------------------
setopt AUTO_PUSHD                 # Make cd push directories onto stack
setopt PUSHD_IGNORE_DUPS          # Avoid duplicate entries in stack
setopt PUSHD_SILENT               # Don't print stack automatically
setopt AUTO_CD                    # Allow `cd somedir` → just `somedir`
setopt NO_BEEP                    # Silence the terminal bell

# ---------------------------------------------------------------------------
# Completion setup
# ---------------------------------------------------------------------------
autoload -Uz compinit
# Initialize completion system; -C for faster startup, skipping timestamp check
compinit -C

# ---------------------------------------------------------------------------
# LS_COLORS setup
# ---------------------------------------------------------------------------
# https://geoff.greer.fm/lscolors/
export LSCOLORS="Gxfxcxdxbxegedabagacad"
export LS_COLORS='no=00:fi=00:di=01;34:ln=00;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=41;33;01:ex=00;32:*.cmd=00;32:*.exe=01;32:*.com=01;32:*.bat=01;32:*.btm=01;32:*.dll=01;32:*.tar=00;31:*.tbz=00;31:*.tgz=00;31:*.rpm=00;31:*.deb=00;31:*.arj=00;31:*.taz=00;31:*.lzh=00;31:*.lzma=00;31:*.zip=00;31:*.zoo=00;31:*.z=00;31:*.Z=00;31:*.gz=00;31:*.bz2=00;31:*.tb2=00;31:*.tz2=00;31:*.tbz2=00;31:*.avi=01;35:*.bmp=01;35:*.gif=01;35:*.jpg=01;35:*.jpeg=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.wmv=01;35:*.mp3=00;32:*.wav=00;32:'

# Customize completion behavior and visuals (`zstyle -L`)
zstyle ':completion:*' format '%B%F{yellow}%p%f%b'                                          # Highlight prefix in yellow
zstyle ':completion:*' menu select                                                          # Enable menu select
zstyle ':completion:*' special-dirs true                                                    # Show '.' and '..' in completions
[[ -n "$LS_COLORS" ]] && zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"            # Use LS_COLORS for completion
zstyle ':completion:*:cd:*' tag-order local-directories directory-stack path-directories    # disable named-directories autocompletion
# zstyle '*' single-ignored show                                                            # ...
zstyle ':completion:*' use-cache true
zstyle ':completion:*' cache-path "$HOME/.zsh/cache"
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'

# ---------------------------------------------------------------------------
# SCP-R completion
# ---------------------------------------------------------------------------
_ssh_config_hosts_only() {
  local cur="${words[CURRENT]}"
  local -a hosts
  local line entries h
  if [[ -n "$cur" && ( $cur == /* || $cur == .*/* || $cur == *@* ) ]]; then
    _files && return
  fi
  [[ -r $HOME/.ssh/config ]] || return 1
  while IFS= read -r line; do
    [[ $line == \#* || -z $line ]] && continue
    if [[ $line == (|[[:space:]])Host\ * ]]; then
      entries=${line#*Host }
      for h in ${(s: :)entries}; do
        [[ $h == *[\*\?\[]* ]] && continue
        hosts+=$h
      done
    fi
  done < "$HOME/.ssh/config"
  hosts=(${(uo)hosts})
  if [[ -z "$cur" ]]; then
    compadd -a hosts && return 0
  else
    matches=(${(M)hosts:#${cur}*})
    if (( ${#matches} )); then
      compadd -a matches
      return 0
    fi
  fi
  return 1
}
compdef _ssh_config_hosts_only scp-r

# ---------------------------------------------------------------------------
# Themes & Plugins
# ---------------------------------------------------------------------------
zsh_custom="$HOME/.zsh/custom"
zsh_custom_t="$zsh_custom/themes"
zsh_custom_p="$zsh_custom/plugins"

# Load Spaceship prompt if available
setopt prompt_subst
theme_spaceship="$zsh_custom_t/spaceship.zsh-theme"
[[ -e "$theme_spaceship" ]] && source "$theme_spaceship"
# Optional: Customize Spaceship theme (optional)
# https://spaceship-prompt.sh/config/prompt/#Prompt-order

# Load selected plugins if present
# - zsh-autosuggestions => Autosuggestions plugin
# - zsh-syntax-highlighting => Syntax highlighting plugin
# - zsh-history-substring-search => History search plugin
for plugin in zsh-autosuggestions zsh-syntax-highlighting zsh-history-substring-search; do
  [[ -f "$zsh_custom_p/$plugin/$plugin.zsh" ]] && source "$zsh_custom_p/$plugin/$plugin.zsh"
done

# Enable fzf integration if installed
command -v fzf &>/dev/null && source <(fzf --zsh)

# Optional: Install and enable zsh-completions plugin for enhanced completion features
# git clone https://github.com/zsh-users/zsh-completions.git $ZSH_CUSTOM/plugins/zsh-completions
# plugins=(zsh-completions)

# ---------------------------------------------------------------------------
# History substring search (custom behavior)
# ---------------------------------------------------------------------------
# Ensure history-search works with prefix match only (not substring)
HISTORY_SUBSTRING_SEARCH_PREFIXED=1
HISTORY_SUBSTRING_SEARCH_ENSURE_UNIQUE=1

# Conditional key bindings — only bind if plugin loaded and terminfo available
if [[ -n "$terminfo[kcuu1]" ]] && whence history-substring-search-up &>/dev/null; then
  bindkey -M emacs "$terminfo[kcuu1]" history-substring-search-up
  bindkey -M viins "$terminfo[kcuu1]" history-substring-search-up
fi
if [[ -n "$terminfo[kcud1]" ]] && whence history-substring-search-down &>/dev/null; then
  bindkey -M emacs "$terminfo[kcud1]" history-substring-search-down
  bindkey -M viins "$terminfo[kcud1]" history-substring-search-down
fi

# ---------------------------------------------------------------------------
# Key bindings for navigation
# ---------------------------------------------------------------------------
autoload -U select-word-style
select-word-style bash  # Make Alt+Backspace delete whole words like Bash

# Load backward-kill-word-match if available
autoload -U backward-kill-word-match
if whence backward-kill-word-match &>/dev/null; then
  zle -N backward-kill-word backward-kill-word-match
  zstyle ':zle:backward-kill-word' word-style standard
  bindkey '^[^?' backward-kill-word  # Alt+Backspace
fi

# Move by word with Ctrl/Alt + Arrows
bindkey '^[[1;5D' backward-word   # Ctrl + Left
bindkey '^[[1;5C' forward-word    # Ctrl + Right
bindkey '^[[1;3D' backward-word   # Alt + Left
bindkey '^[[1;3C' forward-word    # Alt + Right
